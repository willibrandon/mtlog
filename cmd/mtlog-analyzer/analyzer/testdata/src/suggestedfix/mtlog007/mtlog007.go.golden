package mtlog007

import "github.com/willibrandon/mtlog"

const requestIDContextKey = "request_id"

const userIDContextKey = "user_id"

func testContextKeyConstants() {
	log := mtlog.New()

	// Multiple occurrences of user_id - should create constant
	log = log.ForContext(userIDContextKey, 123)                // want `\[MTLOG007\] suggestion: consider defining a constant for commonly used context key 'user_id'`
	log = log.ForContext(userIDContextKey, 456)                // want `\[MTLOG007\] suggestion: consider defining a constant for commonly used context key 'user_id'`
	log.ForContext(userIDContextKey, 789).Information("Third") // want `\[MTLOG007\] suggestion: consider defining a constant for commonly used context key 'user_id'`

	// Multiple occurrences of request_id - should create constant
	log = log.ForContext(requestIDContextKey, "abc-123")                  // want `\[MTLOG007\] suggestion: consider defining a constant for commonly used context key 'request_id'`
	log.ForContext(requestIDContextKey, "def-456").Information("Request") // want `\[MTLOG007\] suggestion: consider defining a constant for commonly used context key 'request_id'`

	// Single occurrence of trace_id - should only suggest simple replacement
	log.ForContext(traceIDContextKey, "xyz-789").Information("Trace") // want `\[MTLOG007\] suggestion: consider defining a constant for commonly used context key 'trace_id'`

	// Non-common key - should not trigger
	log.ForContext("my_custom_key", "value").Information("Custom")
}

func anotherFunction() {
	log := mtlog.New()

	// More occurrences of user_id in a different function
	log.ForContext(userIDContextKey, 111).Information("Another") // want `\[MTLOG007\] suggestion: consider defining a constant for commonly used context key 'user_id'`
}